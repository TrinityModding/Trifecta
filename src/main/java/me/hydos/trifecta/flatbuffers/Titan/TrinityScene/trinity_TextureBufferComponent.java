// automatically generated by the FlatBuffers compiler, do not modify

package me.hydos.trifecta.flatbuffers.Titan.TrinityScene;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class trinity_TextureBufferComponent extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_23_3_3(); }
  public static trinity_TextureBufferComponent getRootAstrinity_TextureBufferComponent(ByteBuffer _bb) { return getRootAstrinity_TextureBufferComponent(_bb, new trinity_TextureBufferComponent()); }
  public static trinity_TextureBufferComponent getRootAstrinity_TextureBufferComponent(ByteBuffer _bb, trinity_TextureBufferComponent obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public trinity_TextureBufferComponent __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long unk0() { int o = __offset(4); return o != 0 ? (long)bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 0L; }

  public static int createtrinity_TextureBufferComponent(FlatBufferBuilder builder,
      long unk0) {
    builder.startTable(1);
    trinity_TextureBufferComponent.addUnk0(builder, unk0);
    return trinity_TextureBufferComponent.endtrinity_TextureBufferComponent(builder);
  }

  public static void starttrinity_TextureBufferComponent(FlatBufferBuilder builder) { builder.startTable(1); }
  public static void addUnk0(FlatBufferBuilder builder, long unk0) { builder.addInt(0, (int) unk0, (int) 0L); }
  public static int endtrinity_TextureBufferComponent(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }
  public static void finishtrinity_TextureBufferComponentBuffer(FlatBufferBuilder builder, int offset) { builder.finish(offset); }
  public static void finishSizePrefixedtrinity_TextureBufferComponentBuffer(FlatBufferBuilder builder, int offset) { builder.finishSizePrefixed(offset); }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public trinity_TextureBufferComponent get(int j) { return get(new trinity_TextureBufferComponent(), j); }
    public trinity_TextureBufferComponent get(trinity_TextureBufferComponent obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
  public trinity_TextureBufferComponentT unpack() {
    trinity_TextureBufferComponentT _o = new trinity_TextureBufferComponentT();
    unpackTo(_o);
    return _o;
  }
  public void unpackTo(trinity_TextureBufferComponentT _o) {
    long _oUnk0 = unk0();
    _o.setUnk0(_oUnk0);
  }
  public static int pack(FlatBufferBuilder builder, trinity_TextureBufferComponentT _o) {
    if (_o == null) return 0;
    return createtrinity_TextureBufferComponent(
      builder,
      _o.getUnk0());
  }
}

