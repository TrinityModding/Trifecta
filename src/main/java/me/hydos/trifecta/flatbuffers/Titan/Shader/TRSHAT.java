// automatically generated by the FlatBuffers compiler, do not modify

package me.hydos.trifecta.flatbuffers.Titan.Shader;

import com.google.flatbuffers.FlatBufferBuilder;

import java.nio.ByteBuffer;

public class TRSHAT {
  private String name;
  private String fileName;
  private SlotMapT[] shaderParam;
  private SlotMapT[] globalParam;
  private long[] paramBuffer;
  private boolean hasShaderParam;
  private boolean hasGlobalParam;

  public String getName() { return name; }

  public void setName(String name) { this.name = name; }

  public String getFileName() { return fileName; }

  public void setFileName(String fileName) { this.fileName = fileName; }

  public SlotMapT[] getShaderParam() { return shaderParam; }

  public void setShaderParam(SlotMapT[] shaderParam) { this.shaderParam = shaderParam; }

  public SlotMapT[] getGlobalParam() { return globalParam; }

  public void setGlobalParam(SlotMapT[] globalParam) { this.globalParam = globalParam; }

  public long[] getParamBuffer() { return paramBuffer; }

  public void setParamBuffer(long[] paramBuffer) { this.paramBuffer = paramBuffer; }

  public boolean getHasShaderParam() { return hasShaderParam; }

  public void setHasShaderParam(boolean hasShaderParam) { this.hasShaderParam = hasShaderParam; }

  public boolean getHasGlobalParam() { return hasGlobalParam; }

  public void setHasGlobalParam(boolean hasGlobalParam) { this.hasGlobalParam = hasGlobalParam; }


  public TRSHAT() {
    this.name = null;
    this.fileName = null;
    this.shaderParam = null;
    this.globalParam = null;
    this.paramBuffer = null;
    this.hasShaderParam = false;
    this.hasGlobalParam = false;
  }
  public static TRSHAT deserializeFromBinary(byte[] fbBuffer) {
    return TRSHA.getRootAsTRSHA(ByteBuffer.wrap(fbBuffer)).unpack();
  }
  public byte[] serializeToBinary() {
    FlatBufferBuilder fbb = new FlatBufferBuilder();
    TRSHA.finishTRSHABuffer(fbb, TRSHA.pack(fbb, this));
    return fbb.sizedByteArray();
  }
}

