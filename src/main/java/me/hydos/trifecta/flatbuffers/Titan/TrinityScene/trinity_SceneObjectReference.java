// automatically generated by the FlatBuffers compiler, do not modify

package me.hydos.trifecta.flatbuffers.Titan.TrinityScene;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class trinity_SceneObjectReference extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_23_3_3(); }
  public static trinity_SceneObjectReference getRootAstrinity_SceneObjectReference(ByteBuffer _bb) { return getRootAstrinity_SceneObjectReference(_bb, new trinity_SceneObjectReference()); }
  public static trinity_SceneObjectReference getRootAstrinity_SceneObjectReference(ByteBuffer _bb, trinity_SceneObjectReference obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public trinity_SceneObjectReference __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String referencedObject() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer referencedObjectAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer referencedObjectInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  public me.hydos.trifecta.flatbuffers.SRT srt() { return srt(new me.hydos.trifecta.flatbuffers.SRT()); }
  public me.hydos.trifecta.flatbuffers.SRT srt(me.hydos.trifecta.flatbuffers.SRT obj) { int o = __offset(6); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }

  public static int createtrinity_SceneObjectReference(FlatBufferBuilder builder,
      int referencedObjectOffset,
      int srtOffset) {
    builder.startTable(2);
    trinity_SceneObjectReference.addSrt(builder, srtOffset);
    trinity_SceneObjectReference.addReferencedObject(builder, referencedObjectOffset);
    return trinity_SceneObjectReference.endtrinity_SceneObjectReference(builder);
  }

  public static void starttrinity_SceneObjectReference(FlatBufferBuilder builder) { builder.startTable(2); }
  public static void addReferencedObject(FlatBufferBuilder builder, int referencedObjectOffset) { builder.addOffset(0, referencedObjectOffset, 0); }
  public static void addSrt(FlatBufferBuilder builder, int srtOffset) { builder.addOffset(1, srtOffset, 0); }
  public static int endtrinity_SceneObjectReference(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }
  public static void finishtrinity_SceneObjectReferenceBuffer(FlatBufferBuilder builder, int offset) { builder.finish(offset); }
  public static void finishSizePrefixedtrinity_SceneObjectReferenceBuffer(FlatBufferBuilder builder, int offset) { builder.finishSizePrefixed(offset); }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public trinity_SceneObjectReference get(int j) { return get(new trinity_SceneObjectReference(), j); }
    public trinity_SceneObjectReference get(trinity_SceneObjectReference obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
  public trinity_SceneObjectReferenceT unpack() {
    trinity_SceneObjectReferenceT _o = new trinity_SceneObjectReferenceT();
    unpackTo(_o);
    return _o;
  }
  public void unpackTo(trinity_SceneObjectReferenceT _o) {
    String _oReferencedObject = referencedObject();
    _o.setReferencedObject(_oReferencedObject);
    if (srt() != null) _o.setSrt(srt().unpack());
    else _o.setSrt(null);
  }
  public static int pack(FlatBufferBuilder builder, trinity_SceneObjectReferenceT _o) {
    if (_o == null) return 0;
    int _referencedObject = _o.getReferencedObject() == null ? 0 : builder.createString(_o.getReferencedObject());
    int _srt = _o.getSrt() == null ? 0 : me.hydos.trifecta.flatbuffers.SRT.pack(builder, _o.getSrt());
    return createtrinity_SceneObjectReference(
      builder,
      _referencedObject,
      _srt);
  }
}

