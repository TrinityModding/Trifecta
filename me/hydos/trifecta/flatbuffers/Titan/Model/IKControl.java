// automatically generated by the FlatBuffers compiler, do not modify

package me.hydos.trifecta.flatbuffers.Titan.Model;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class IKControl extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_23_3_3(); }
  public static IKControl getRootAsIKControl(ByteBuffer _bb) { return getRootAsIKControl(_bb, new IKControl()); }
  public static IKControl getRootAsIKControl(ByteBuffer _bb, IKControl obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public IKControl __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String ikName() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer ikNameAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer ikNameInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  public String ikChainStart() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer ikChainStartAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public ByteBuffer ikChainStartInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 6, 1); }
  public String ikChainEnd() { int o = __offset(8); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer ikChainEndAsByteBuffer() { return __vector_as_bytebuffer(8, 1); }
  public ByteBuffer ikChainEndInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 8, 1); }
  public String ikType() { int o = __offset(10); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer ikTypeAsByteBuffer() { return __vector_as_bytebuffer(10, 1); }
  public ByteBuffer ikTypeInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 10, 1); }
  public long res4() { int o = __offset(12); return o != 0 ? (long)bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 0L; }
  public me.hydos.trifecta.flatbuffers.Titan.Model.Vec3 ikPos() { return ikPos(new me.hydos.trifecta.flatbuffers.Titan.Model.Vec3()); }
  public me.hydos.trifecta.flatbuffers.Titan.Model.Vec3 ikPos(me.hydos.trifecta.flatbuffers.Titan.Model.Vec3 obj) { int o = __offset(14); return o != 0 ? obj.__assign(o + bb_pos, bb) : null; }
  public me.hydos.trifecta.flatbuffers.Titan.Model.Vec4 ikRot() { return ikRot(new me.hydos.trifecta.flatbuffers.Titan.Model.Vec4()); }
  public me.hydos.trifecta.flatbuffers.Titan.Model.Vec4 ikRot(me.hydos.trifecta.flatbuffers.Titan.Model.Vec4 obj) { int o = __offset(16); return o != 0 ? obj.__assign(o + bb_pos, bb) : null; }

  public static void startIKControl(FlatBufferBuilder builder) { builder.startTable(7); }
  public static void addIkName(FlatBufferBuilder builder, int ikNameOffset) { builder.addOffset(0, ikNameOffset, 0); }
  public static void addIkChainStart(FlatBufferBuilder builder, int ikChainStartOffset) { builder.addOffset(1, ikChainStartOffset, 0); }
  public static void addIkChainEnd(FlatBufferBuilder builder, int ikChainEndOffset) { builder.addOffset(2, ikChainEndOffset, 0); }
  public static void addIkType(FlatBufferBuilder builder, int ikTypeOffset) { builder.addOffset(3, ikTypeOffset, 0); }
  public static void addRes4(FlatBufferBuilder builder, long res4) { builder.addInt(4, (int) res4, (int) 0L); }
  public static void addIkPos(FlatBufferBuilder builder, int ikPosOffset) { builder.addStruct(5, ikPosOffset, 0); }
  public static void addIkRot(FlatBufferBuilder builder, int ikRotOffset) { builder.addStruct(6, ikRotOffset, 0); }
  public static int endIKControl(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public IKControl get(int j) { return get(new IKControl(), j); }
    public IKControl get(IKControl obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
  public IKControlT unpack() {
    IKControlT _o = new IKControlT();
    unpackTo(_o);
    return _o;
  }
  public void unpackTo(IKControlT _o) {
    String _oIkName = ikName();
    _o.setIkName(_oIkName);
    String _oIkChainStart = ikChainStart();
    _o.setIkChainStart(_oIkChainStart);
    String _oIkChainEnd = ikChainEnd();
    _o.setIkChainEnd(_oIkChainEnd);
    String _oIkType = ikType();
    _o.setIkType(_oIkType);
    long _oRes4 = res4();
    _o.setRes4(_oRes4);
    if (ikPos() != null) ikPos().unpackTo(_o.getIkPos());
    else _o.setIkPos(null);
    if (ikRot() != null) ikRot().unpackTo(_o.getIkRot());
    else _o.setIkRot(null);
  }
  public static int pack(FlatBufferBuilder builder, IKControlT _o) {
    if (_o == null) return 0;
    int _ikName = _o.getIkName() == null ? 0 : builder.createString(_o.getIkName());
    int _ikChainStart = _o.getIkChainStart() == null ? 0 : builder.createString(_o.getIkChainStart());
    int _ikChainEnd = _o.getIkChainEnd() == null ? 0 : builder.createString(_o.getIkChainEnd());
    int _ikType = _o.getIkType() == null ? 0 : builder.createString(_o.getIkType());
    startIKControl(builder);
    addIkName(builder, _ikName);
    addIkChainStart(builder, _ikChainStart);
    addIkChainEnd(builder, _ikChainEnd);
    addIkType(builder, _ikType);
    addRes4(builder, _o.getRes4());
    addIkPos(builder, me.hydos.trifecta.flatbuffers.Titan.Model.Vec3.pack(builder, _o.getIkPos()));
    addIkRot(builder, me.hydos.trifecta.flatbuffers.Titan.Model.Vec4.pack(builder, _o.getIkRot()));
    return endIKControl(builder);
  }
}

