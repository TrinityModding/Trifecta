// automatically generated by the FlatBuffers compiler, do not modify

package me.hydos.trifecta.flatbuffers.Titan.TrinityScene;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

public class additional_SRT_DataT {
  private long unk0;
  private String nameOfUsedVec3f;
  private me.hydos.trifecta.flatbuffers.SRTT unk2;

  public long getUnk0() { return unk0; }

  public void setUnk0(long unk0) { this.unk0 = unk0; }

  public String getNameOfUsedVec3f() { return nameOfUsedVec3f; }

  public void setNameOfUsedVec3f(String nameOfUsedVec3f) { this.nameOfUsedVec3f = nameOfUsedVec3f; }

  public me.hydos.trifecta.flatbuffers.SRTT getUnk2() { return unk2; }

  public void setUnk2(me.hydos.trifecta.flatbuffers.SRTT unk2) { this.unk2 = unk2; }


  public additional_SRT_DataT() {
    this.unk0 = 0L;
    this.nameOfUsedVec3f = null;
    this.unk2 = null;
  }
}

