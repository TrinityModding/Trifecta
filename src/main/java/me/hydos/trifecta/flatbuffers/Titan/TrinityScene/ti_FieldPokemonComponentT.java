// automatically generated by the FlatBuffers compiler, do not modify

package me.hydos.trifecta.flatbuffers.Titan.TrinityScene;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

public class ti_FieldPokemonComponentT {
  private long nationalDexId;
  private long res1;
  private long res2;
  private long res3;
  private long res4;

  public long getNationalDexId() { return nationalDexId; }

  public void setNationalDexId(long nationalDexId) { this.nationalDexId = nationalDexId; }

  public long getRes1() { return res1; }

  public void setRes1(long res1) { this.res1 = res1; }

  public long getRes2() { return res2; }

  public void setRes2(long res2) { this.res2 = res2; }

  public long getRes3() { return res3; }

  public void setRes3(long res3) { this.res3 = res3; }

  public long getRes4() { return res4; }

  public void setRes4(long res4) { this.res4 = res4; }


  public ti_FieldPokemonComponentT() {
    this.nationalDexId = 0L;
    this.res1 = 0L;
    this.res2 = 0L;
    this.res3 = 0L;
    this.res4 = 0L;
  }
  public static ti_FieldPokemonComponentT deserializeFromBinary(byte[] fbBuffer) {
    return ti_FieldPokemonComponent.getRootAsti_FieldPokemonComponent(ByteBuffer.wrap(fbBuffer)).unpack();
  }
  public byte[] serializeToBinary() {
    FlatBufferBuilder fbb = new FlatBufferBuilder();
    ti_FieldPokemonComponent.finishti_FieldPokemonComponentBuffer(fbb, ti_FieldPokemonComponent.pack(fbb, this));
    return fbb.sizedByteArray();
  }
}

