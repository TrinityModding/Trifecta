// automatically generated by the FlatBuffers compiler, do not modify

package me.hydos.trifecta.flatbuffers.Titan.Model;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class LookupTable extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_23_3_3(); }
  public static LookupTable getRootAsLookupTable(ByteBuffer _bb) { return getRootAsLookupTable(_bb, new LookupTable()); }
  public static LookupTable getRootAsLookupTable(ByteBuffer _bb, LookupTable obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public LookupTable __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String shapeName() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer shapeNameAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer shapeNameInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  public String name() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer nameAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public ByteBuffer nameInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 6, 1); }
  public me.hydos.trifecta.flatbuffers.Titan.Model.Vec3i unk2() { return unk2(new me.hydos.trifecta.flatbuffers.Titan.Model.Vec3i()); }
  public me.hydos.trifecta.flatbuffers.Titan.Model.Vec3i unk2(me.hydos.trifecta.flatbuffers.Titan.Model.Vec3i obj) { int o = __offset(8); return o != 0 ? obj.__assign(o + bb_pos, bb) : null; }
  public String meshNames(int j) { int o = __offset(10); return o != 0 ? __string(__vector(o) + j * 4) : null; }
  public int meshNamesLength() { int o = __offset(10); return o != 0 ? __vector_len(o) : 0; }
  public StringVector meshNamesVector() { return meshNamesVector(new StringVector()); }
  public StringVector meshNamesVector(StringVector obj) { int o = __offset(10); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }
  public me.hydos.trifecta.flatbuffers.Titan.Model.Table2 baseShape(int j) { return baseShape(new me.hydos.trifecta.flatbuffers.Titan.Model.Table2(), j); }
  public me.hydos.trifecta.flatbuffers.Titan.Model.Table2 baseShape(me.hydos.trifecta.flatbuffers.Titan.Model.Table2 obj, int j) { int o = __offset(12); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int baseShapeLength() { int o = __offset(12); return o != 0 ? __vector_len(o) : 0; }
  public me.hydos.trifecta.flatbuffers.Titan.Model.Table2.Vector baseShapeVector() { return baseShapeVector(new me.hydos.trifecta.flatbuffers.Titan.Model.Table2.Vector()); }
  public me.hydos.trifecta.flatbuffers.Titan.Model.Table2.Vector baseShapeVector(me.hydos.trifecta.flatbuffers.Titan.Model.Table2.Vector obj) { int o = __offset(12); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }
  public me.hydos.trifecta.flatbuffers.Titan.Model.Vec3f somePositions(int j) { return somePositions(new me.hydos.trifecta.flatbuffers.Titan.Model.Vec3f(), j); }
  public me.hydos.trifecta.flatbuffers.Titan.Model.Vec3f somePositions(me.hydos.trifecta.flatbuffers.Titan.Model.Vec3f obj, int j) { int o = __offset(14); return o != 0 ? obj.__assign(__vector(o) + j * 12, bb) : null; }
  public int somePositionsLength() { int o = __offset(14); return o != 0 ? __vector_len(o) : 0; }
  public me.hydos.trifecta.flatbuffers.Titan.Model.Vec3f.Vector somePositionsVector() { return somePositionsVector(new me.hydos.trifecta.flatbuffers.Titan.Model.Vec3f.Vector()); }
  public me.hydos.trifecta.flatbuffers.Titan.Model.Vec3f.Vector somePositionsVector(me.hydos.trifecta.flatbuffers.Titan.Model.Vec3f.Vector obj) { int o = __offset(14); return o != 0 ? obj.__assign(__vector(o), 12, bb) : null; }

  public static void startLookupTable(FlatBufferBuilder builder) { builder.startTable(6); }
  public static void addShapeName(FlatBufferBuilder builder, int shapeNameOffset) { builder.addOffset(0, shapeNameOffset, 0); }
  public static void addName(FlatBufferBuilder builder, int nameOffset) { builder.addOffset(1, nameOffset, 0); }
  public static void addUnk2(FlatBufferBuilder builder, int unk2Offset) { builder.addStruct(2, unk2Offset, 0); }
  public static void addMeshNames(FlatBufferBuilder builder, int meshNamesOffset) { builder.addOffset(3, meshNamesOffset, 0); }
  public static int createMeshNamesVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startMeshNamesVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addBaseShape(FlatBufferBuilder builder, int baseShapeOffset) { builder.addOffset(4, baseShapeOffset, 0); }
  public static int createBaseShapeVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startBaseShapeVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addSomePositions(FlatBufferBuilder builder, int somePositionsOffset) { builder.addOffset(5, somePositionsOffset, 0); }
  public static void startSomePositionsVector(FlatBufferBuilder builder, int numElems) { builder.startVector(12, numElems, 4); }
  public static int endLookupTable(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public LookupTable get(int j) { return get(new LookupTable(), j); }
    public LookupTable get(LookupTable obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
  public LookupTableT unpack() {
    LookupTableT _o = new LookupTableT();
    unpackTo(_o);
    return _o;
  }
  public void unpackTo(LookupTableT _o) {
    String _oShapeName = shapeName();
    _o.setShapeName(_oShapeName);
    String _oName = name();
    _o.setName(_oName);
    if (unk2() != null) unk2().unpackTo(_o.getUnk2());
    else _o.setUnk2(null);
    String[] _oMeshNames = new String[meshNamesLength()];
    for (int _j = 0; _j < meshNamesLength(); ++_j) {_oMeshNames[_j] = meshNames(_j);}
    _o.setMeshNames(_oMeshNames);
    me.hydos.trifecta.flatbuffers.Titan.Model.Table2T[] _oBaseShape = new me.hydos.trifecta.flatbuffers.Titan.Model.Table2T[baseShapeLength()];
    for (int _j = 0; _j < baseShapeLength(); ++_j) {_oBaseShape[_j] = (baseShape(_j) != null ? baseShape(_j).unpack() : null);}
    _o.setBaseShape(_oBaseShape);
    me.hydos.trifecta.flatbuffers.Titan.Model.Vec3fT[] _oSomePositions = new me.hydos.trifecta.flatbuffers.Titan.Model.Vec3fT[somePositionsLength()];
    for (int _j = 0; _j < somePositionsLength(); ++_j) {_oSomePositions[_j] = (somePositions(_j) != null ? somePositions(_j).unpack() : null);}
    _o.setSomePositions(_oSomePositions);
  }
  public static int pack(FlatBufferBuilder builder, LookupTableT _o) {
    if (_o == null) return 0;
    int _shapeName = _o.getShapeName() == null ? 0 : builder.createString(_o.getShapeName());
    int _name = _o.getName() == null ? 0 : builder.createString(_o.getName());
    int _meshNames = 0;
    if (_o.getMeshNames() != null) {
      int[] __meshNames = new int[_o.getMeshNames().length];
      int _j = 0;
      for (String _e : _o.getMeshNames()) { __meshNames[_j] = builder.createString(_e); _j++;}
      _meshNames = createMeshNamesVector(builder, __meshNames);
    }
    int _baseShape = 0;
    if (_o.getBaseShape() != null) {
      int[] __baseShape = new int[_o.getBaseShape().length];
      int _j = 0;
      for (me.hydos.trifecta.flatbuffers.Titan.Model.Table2T _e : _o.getBaseShape()) { __baseShape[_j] = me.hydos.trifecta.flatbuffers.Titan.Model.Table2.pack(builder, _e); _j++;}
      _baseShape = createBaseShapeVector(builder, __baseShape);
    }
    int _somePositions = 0;
    me.hydos.trifecta.flatbuffers.Titan.Model.Vec3fT[] _oSomePositions = _o.getSomePositions();
    if (_oSomePositions != null) {
      int _unused_offset = 0;
      startSomePositionsVector(builder, _oSomePositions.length);
      for (int _j = _oSomePositions.length - 1; _j >=0; _j--) { _unused_offset = me.hydos.trifecta.flatbuffers.Titan.Model.Vec3f.pack(builder, _oSomePositions[_j]);}
      _somePositions = builder.endVector();
    }
    startLookupTable(builder);
    addShapeName(builder, _shapeName);
    addName(builder, _name);
    addUnk2(builder, me.hydos.trifecta.flatbuffers.Titan.Model.Vec3i.pack(builder, _o.getUnk2()));
    addMeshNames(builder, _meshNames);
    addBaseShape(builder, _baseShape);
    addSomePositions(builder, _somePositions);
    return endLookupTable(builder);
  }
}

