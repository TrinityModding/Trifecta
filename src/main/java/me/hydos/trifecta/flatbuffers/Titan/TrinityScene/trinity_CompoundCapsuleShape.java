// automatically generated by the FlatBuffers compiler, do not modify

package me.hydos.trifecta.flatbuffers.Titan.TrinityScene;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class trinity_CompoundCapsuleShape extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_23_3_3(); }
  public static trinity_CompoundCapsuleShape getRootAstrinity_CompoundCapsuleShape(ByteBuffer _bb) { return getRootAstrinity_CompoundCapsuleShape(_bb, new trinity_CompoundCapsuleShape()); }
  public static trinity_CompoundCapsuleShape getRootAstrinity_CompoundCapsuleShape(ByteBuffer _bb, trinity_CompoundCapsuleShape obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public trinity_CompoundCapsuleShape __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String unk0() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer unk0AsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer unk0InByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  public me.hydos.trifecta.flatbuffers.Vec3f unk1() { return unk1(new me.hydos.trifecta.flatbuffers.Vec3f()); }
  public me.hydos.trifecta.flatbuffers.Vec3f unk1(me.hydos.trifecta.flatbuffers.Vec3f obj) { int o = __offset(6); return o != 0 ? obj.__assign(o + bb_pos, bb) : null; }
  public float unk2() { int o = __offset(8); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }
  public float unk3() { int o = __offset(10); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }
  public me.hydos.trifecta.flatbuffers.Vec3f unk4() { return unk4(new me.hydos.trifecta.flatbuffers.Vec3f()); }
  public me.hydos.trifecta.flatbuffers.Vec3f unk4(me.hydos.trifecta.flatbuffers.Vec3f obj) { int o = __offset(12); return o != 0 ? obj.__assign(o + bb_pos, bb) : null; }

  public static void starttrinity_CompoundCapsuleShape(FlatBufferBuilder builder) { builder.startTable(5); }
  public static void addUnk0(FlatBufferBuilder builder, int unk0Offset) { builder.addOffset(0, unk0Offset, 0); }
  public static void addUnk1(FlatBufferBuilder builder, int unk1Offset) { builder.addStruct(1, unk1Offset, 0); }
  public static void addUnk2(FlatBufferBuilder builder, float unk2) { builder.addFloat(2, unk2, 0.0f); }
  public static void addUnk3(FlatBufferBuilder builder, float unk3) { builder.addFloat(3, unk3, 0.0f); }
  public static void addUnk4(FlatBufferBuilder builder, int unk4Offset) { builder.addStruct(4, unk4Offset, 0); }
  public static int endtrinity_CompoundCapsuleShape(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }
  public static void finishtrinity_CompoundCapsuleShapeBuffer(FlatBufferBuilder builder, int offset) { builder.finish(offset); }
  public static void finishSizePrefixedtrinity_CompoundCapsuleShapeBuffer(FlatBufferBuilder builder, int offset) { builder.finishSizePrefixed(offset); }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public trinity_CompoundCapsuleShape get(int j) { return get(new trinity_CompoundCapsuleShape(), j); }
    public trinity_CompoundCapsuleShape get(trinity_CompoundCapsuleShape obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
  public trinity_CompoundCapsuleShapeT unpack() {
    trinity_CompoundCapsuleShapeT _o = new trinity_CompoundCapsuleShapeT();
    unpackTo(_o);
    return _o;
  }
  public void unpackTo(trinity_CompoundCapsuleShapeT _o) {
    String _oUnk0 = unk0();
    _o.setUnk0(_oUnk0);
    if (unk1() != null) unk1().unpackTo(_o.getUnk1());
    else _o.setUnk1(null);
    float _oUnk2 = unk2();
    _o.setUnk2(_oUnk2);
    float _oUnk3 = unk3();
    _o.setUnk3(_oUnk3);
    if (unk4() != null) unk4().unpackTo(_o.getUnk4());
    else _o.setUnk4(null);
  }
  public static int pack(FlatBufferBuilder builder, trinity_CompoundCapsuleShapeT _o) {
    if (_o == null) return 0;
    int _unk0 = _o.getUnk0() == null ? 0 : builder.createString(_o.getUnk0());
    starttrinity_CompoundCapsuleShape(builder);
    addUnk0(builder, _unk0);
    addUnk1(builder, me.hydos.trifecta.flatbuffers.Vec3f.pack(builder, _o.getUnk1()));
    addUnk2(builder, _o.getUnk2());
    addUnk3(builder, _o.getUnk3());
    addUnk4(builder, me.hydos.trifecta.flatbuffers.Vec3f.pack(builder, _o.getUnk4()));
    return endtrinity_CompoundCapsuleShape(builder);
  }
}

