// automatically generated by the FlatBuffers compiler, do not modify

package me.hydos.trifecta.flatbuffers.Titan.TrinityScene;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class trinity_Scene extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_23_3_3(); }
  public static trinity_Scene getRootAstrinity_Scene(ByteBuffer _bb) { return getRootAstrinity_Scene(_bb, new trinity_Scene()); }
  public static trinity_Scene getRootAstrinity_Scene(ByteBuffer _bb, trinity_Scene obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public trinity_Scene __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String sceneName() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer sceneNameAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer sceneNameInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  public String sceneExtra() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer sceneExtraAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public ByteBuffer sceneExtraInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 6, 1); }
  public long res2() { int o = __offset(8); return o != 0 ? (long)bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 0L; }
  public long res3() { int o = __offset(10); return o != 0 ? (long)bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 0L; }
  public me.hydos.trifecta.flatbuffers.Titan.TrinityScene.SceneEntry sceneObjectList(int j) { return sceneObjectList(new me.hydos.trifecta.flatbuffers.Titan.TrinityScene.SceneEntry(), j); }
  public me.hydos.trifecta.flatbuffers.Titan.TrinityScene.SceneEntry sceneObjectList(me.hydos.trifecta.flatbuffers.Titan.TrinityScene.SceneEntry obj, int j) { int o = __offset(12); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int sceneObjectListLength() { int o = __offset(12); return o != 0 ? __vector_len(o) : 0; }
  public me.hydos.trifecta.flatbuffers.Titan.TrinityScene.SceneEntry.Vector sceneObjectListVector() { return sceneObjectListVector(new me.hydos.trifecta.flatbuffers.Titan.TrinityScene.SceneEntry.Vector()); }
  public me.hydos.trifecta.flatbuffers.Titan.TrinityScene.SceneEntry.Vector sceneObjectListVector(me.hydos.trifecta.flatbuffers.Titan.TrinityScene.SceneEntry.Vector obj) { int o = __offset(12); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }
  public String res5(int j) { int o = __offset(14); return o != 0 ? __string(__vector(o) + j * 4) : null; }
  public int res5Length() { int o = __offset(14); return o != 0 ? __vector_len(o) : 0; }
  public StringVector res5Vector() { return res5Vector(new StringVector()); }
  public StringVector res5Vector(StringVector obj) { int o = __offset(14); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }
  public int unk6() { int o = __offset(16); return o != 0 ? bb.get(o + bb_pos) & 0xFF : 0; }

  public static int createtrinity_Scene(FlatBufferBuilder builder,
      int sceneNameOffset,
      int sceneExtraOffset,
      long res2,
      long res3,
      int sceneObjectListOffset,
      int res5Offset,
      int unk6) {
    builder.startTable(7);
    trinity_Scene.addRes5(builder, res5Offset);
    trinity_Scene.addSceneObjectList(builder, sceneObjectListOffset);
    trinity_Scene.addRes3(builder, res3);
    trinity_Scene.addRes2(builder, res2);
    trinity_Scene.addSceneExtra(builder, sceneExtraOffset);
    trinity_Scene.addSceneName(builder, sceneNameOffset);
    trinity_Scene.addUnk6(builder, unk6);
    return trinity_Scene.endtrinity_Scene(builder);
  }

  public static void starttrinity_Scene(FlatBufferBuilder builder) { builder.startTable(7); }
  public static void addSceneName(FlatBufferBuilder builder, int sceneNameOffset) { builder.addOffset(0, sceneNameOffset, 0); }
  public static void addSceneExtra(FlatBufferBuilder builder, int sceneExtraOffset) { builder.addOffset(1, sceneExtraOffset, 0); }
  public static void addRes2(FlatBufferBuilder builder, long res2) { builder.addInt(2, (int) res2, (int) 0L); }
  public static void addRes3(FlatBufferBuilder builder, long res3) { builder.addInt(3, (int) res3, (int) 0L); }
  public static void addSceneObjectList(FlatBufferBuilder builder, int sceneObjectListOffset) { builder.addOffset(4, sceneObjectListOffset, 0); }
  public static int createSceneObjectListVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startSceneObjectListVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addRes5(FlatBufferBuilder builder, int res5Offset) { builder.addOffset(5, res5Offset, 0); }
  public static int createRes5Vector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startRes5Vector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addUnk6(FlatBufferBuilder builder, int unk6) { builder.addByte(6, (byte) unk6, (byte) 0); }
  public static int endtrinity_Scene(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }
  public static void finishtrinity_SceneBuffer(FlatBufferBuilder builder, int offset) { builder.finish(offset); }
  public static void finishSizePrefixedtrinity_SceneBuffer(FlatBufferBuilder builder, int offset) { builder.finishSizePrefixed(offset); }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public trinity_Scene get(int j) { return get(new trinity_Scene(), j); }
    public trinity_Scene get(trinity_Scene obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
  public trinity_SceneT unpack() {
    trinity_SceneT _o = new trinity_SceneT();
    unpackTo(_o);
    return _o;
  }
  public void unpackTo(trinity_SceneT _o) {
    String _oSceneName = sceneName();
    _o.setSceneName(_oSceneName);
    String _oSceneExtra = sceneExtra();
    _o.setSceneExtra(_oSceneExtra);
    long _oRes2 = res2();
    _o.setRes2(_oRes2);
    long _oRes3 = res3();
    _o.setRes3(_oRes3);
    me.hydos.trifecta.flatbuffers.Titan.TrinityScene.SceneEntryT[] _oSceneObjectList = new me.hydos.trifecta.flatbuffers.Titan.TrinityScene.SceneEntryT[sceneObjectListLength()];
    for (int _j = 0; _j < sceneObjectListLength(); ++_j) {_oSceneObjectList[_j] = (sceneObjectList(_j) != null ? sceneObjectList(_j).unpack() : null);}
    _o.setSceneObjectList(_oSceneObjectList);
    String[] _oRes5 = new String[res5Length()];
    for (int _j = 0; _j < res5Length(); ++_j) {_oRes5[_j] = res5(_j);}
    _o.setRes5(_oRes5);
    int _oUnk6 = unk6();
    _o.setUnk6(_oUnk6);
  }
  public static int pack(FlatBufferBuilder builder, trinity_SceneT _o) {
    if (_o == null) return 0;
    int _sceneName = _o.getSceneName() == null ? 0 : builder.createString(_o.getSceneName());
    int _sceneExtra = _o.getSceneExtra() == null ? 0 : builder.createString(_o.getSceneExtra());
    int _sceneObjectList = 0;
    if (_o.getSceneObjectList() != null) {
      int[] __sceneObjectList = new int[_o.getSceneObjectList().length];
      int _j = 0;
      for (me.hydos.trifecta.flatbuffers.Titan.TrinityScene.SceneEntryT _e : _o.getSceneObjectList()) { __sceneObjectList[_j] = me.hydos.trifecta.flatbuffers.Titan.TrinityScene.SceneEntry.pack(builder, _e); _j++;}
      _sceneObjectList = createSceneObjectListVector(builder, __sceneObjectList);
    }
    int _res5 = 0;
    if (_o.getRes5() != null) {
      int[] __res5 = new int[_o.getRes5().length];
      int _j = 0;
      for (String _e : _o.getRes5()) { __res5[_j] = builder.createString(_e); _j++;}
      _res5 = createRes5Vector(builder, __res5);
    }
    return createtrinity_Scene(
      builder,
      _sceneName,
      _sceneExtra,
      _o.getRes2(),
      _o.getRes3(),
      _sceneObjectList,
      _res5,
      _o.getUnk6());
  }
}

