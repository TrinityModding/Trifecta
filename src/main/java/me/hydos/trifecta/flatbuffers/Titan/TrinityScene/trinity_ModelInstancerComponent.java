// automatically generated by the FlatBuffers compiler, do not modify

package me.hydos.trifecta.flatbuffers.Titan.TrinityScene;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class trinity_ModelInstancerComponent extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_23_3_3(); }
  public static trinity_ModelInstancerComponent getRootAstrinity_ModelInstancerComponent(ByteBuffer _bb) { return getRootAstrinity_ModelInstancerComponent(_bb, new trinity_ModelInstancerComponent()); }
  public static trinity_ModelInstancerComponent getRootAstrinity_ModelInstancerComponent(ByteBuffer _bb, trinity_ModelInstancerComponent obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public trinity_ModelInstancerComponent __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String filePath() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer filePathAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer filePathInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }

  public static int createtrinity_ModelInstancerComponent(FlatBufferBuilder builder,
      int filePathOffset) {
    builder.startTable(1);
    trinity_ModelInstancerComponent.addFilePath(builder, filePathOffset);
    return trinity_ModelInstancerComponent.endtrinity_ModelInstancerComponent(builder);
  }

  public static void starttrinity_ModelInstancerComponent(FlatBufferBuilder builder) { builder.startTable(1); }
  public static void addFilePath(FlatBufferBuilder builder, int filePathOffset) { builder.addOffset(0, filePathOffset, 0); }
  public static int endtrinity_ModelInstancerComponent(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }
  public static void finishtrinity_ModelInstancerComponentBuffer(FlatBufferBuilder builder, int offset) { builder.finish(offset); }
  public static void finishSizePrefixedtrinity_ModelInstancerComponentBuffer(FlatBufferBuilder builder, int offset) { builder.finishSizePrefixed(offset); }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public trinity_ModelInstancerComponent get(int j) { return get(new trinity_ModelInstancerComponent(), j); }
    public trinity_ModelInstancerComponent get(trinity_ModelInstancerComponent obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
  public trinity_ModelInstancerComponentT unpack() {
    trinity_ModelInstancerComponentT _o = new trinity_ModelInstancerComponentT();
    unpackTo(_o);
    return _o;
  }
  public void unpackTo(trinity_ModelInstancerComponentT _o) {
    String _oFilePath = filePath();
    _o.setFilePath(_oFilePath);
  }
  public static int pack(FlatBufferBuilder builder, trinity_ModelInstancerComponentT _o) {
    if (_o == null) return 0;
    int _filePath = _o.getFilePath() == null ? 0 : builder.createString(_o.getFilePath());
    return createtrinity_ModelInstancerComponent(
      builder,
      _filePath);
  }
}

