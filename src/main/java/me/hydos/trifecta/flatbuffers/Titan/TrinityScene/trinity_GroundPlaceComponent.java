// automatically generated by the FlatBuffers compiler, do not modify

package me.hydos.trifecta.flatbuffers.Titan.TrinityScene;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class trinity_GroundPlaceComponent extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_23_3_3(); }
  public static trinity_GroundPlaceComponent getRootAstrinity_GroundPlaceComponent(ByteBuffer _bb) { return getRootAstrinity_GroundPlaceComponent(_bb, new trinity_GroundPlaceComponent()); }
  public static trinity_GroundPlaceComponent getRootAstrinity_GroundPlaceComponent(ByteBuffer _bb, trinity_GroundPlaceComponent obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public trinity_GroundPlaceComponent __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long index() { int o = __offset(4); return o != 0 ? (long)bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 0L; }
  public boolean res1() { int o = __offset(6); return o != 0 ? 0!=bb.get(o + bb_pos) : true; }

  public static int createtrinity_GroundPlaceComponent(FlatBufferBuilder builder,
      long index,
      boolean res1) {
    builder.startTable(2);
    trinity_GroundPlaceComponent.addIndex(builder, index);
    trinity_GroundPlaceComponent.addRes1(builder, res1);
    return trinity_GroundPlaceComponent.endtrinity_GroundPlaceComponent(builder);
  }

  public static void starttrinity_GroundPlaceComponent(FlatBufferBuilder builder) { builder.startTable(2); }
  public static void addIndex(FlatBufferBuilder builder, long index) { builder.addInt(0, (int) index, (int) 0L); }
  public static void addRes1(FlatBufferBuilder builder, boolean res1) { builder.addBoolean(1, res1, true); }
  public static int endtrinity_GroundPlaceComponent(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }
  public static void finishtrinity_GroundPlaceComponentBuffer(FlatBufferBuilder builder, int offset) { builder.finish(offset); }
  public static void finishSizePrefixedtrinity_GroundPlaceComponentBuffer(FlatBufferBuilder builder, int offset) { builder.finishSizePrefixed(offset); }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public trinity_GroundPlaceComponent get(int j) { return get(new trinity_GroundPlaceComponent(), j); }
    public trinity_GroundPlaceComponent get(trinity_GroundPlaceComponent obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
  public trinity_GroundPlaceComponentT unpack() {
    trinity_GroundPlaceComponentT _o = new trinity_GroundPlaceComponentT();
    unpackTo(_o);
    return _o;
  }
  public void unpackTo(trinity_GroundPlaceComponentT _o) {
    long _oIndex = index();
    _o.setIndex(_oIndex);
    boolean _oRes1 = res1();
    _o.setRes1(_oRes1);
  }
  public static int pack(FlatBufferBuilder builder, trinity_GroundPlaceComponentT _o) {
    if (_o == null) return 0;
    return createtrinity_GroundPlaceComponent(
      builder,
      _o.getIndex(),
      _o.getRes1());
  }
}

