// automatically generated by the FlatBuffers compiler, do not modify

package me.hydos.trifecta.flatbuffers.Titan.TrinityScene;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

public class ti_DynamicExclusionComponentT {
  private byte unk0;
  private boolean unk1;

  public byte getUnk0() { return unk0; }

  public void setUnk0(byte unk0) { this.unk0 = unk0; }

  public boolean getUnk1() { return unk1; }

  public void setUnk1(boolean unk1) { this.unk1 = unk1; }


  public ti_DynamicExclusionComponentT() {
    this.unk0 = 0;
    this.unk1 = false;
  }
  public static ti_DynamicExclusionComponentT deserializeFromBinary(byte[] fbBuffer) {
    return ti_DynamicExclusionComponent.getRootAsti_DynamicExclusionComponent(ByteBuffer.wrap(fbBuffer)).unpack();
  }
  public byte[] serializeToBinary() {
    FlatBufferBuilder fbb = new FlatBufferBuilder();
    ti_DynamicExclusionComponent.finishti_DynamicExclusionComponentBuffer(fbb, ti_DynamicExclusionComponent.pack(fbb, this));
    return fbb.sizedByteArray();
  }
}

