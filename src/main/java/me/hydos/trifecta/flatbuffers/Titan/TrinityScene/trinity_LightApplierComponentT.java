// automatically generated by the FlatBuffers compiler, do not modify

package me.hydos.trifecta.flatbuffers.Titan.TrinityScene;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

public class trinity_LightApplierComponentT {
  private String filePath;
  private long unk1;
  private float unk2;
  private boolean unk3;
  private String unk4;
  private long unk5;
  private boolean unk6;
  private long unk7;
  private boolean unk8;
  private boolean unk9;

  public String getFilePath() { return filePath; }

  public void setFilePath(String filePath) { this.filePath = filePath; }

  public long getUnk1() { return unk1; }

  public void setUnk1(long unk1) { this.unk1 = unk1; }

  public float getUnk2() { return unk2; }

  public void setUnk2(float unk2) { this.unk2 = unk2; }

  public boolean getUnk3() { return unk3; }

  public void setUnk3(boolean unk3) { this.unk3 = unk3; }

  public String getUnk4() { return unk4; }

  public void setUnk4(String unk4) { this.unk4 = unk4; }

  public long getUnk5() { return unk5; }

  public void setUnk5(long unk5) { this.unk5 = unk5; }

  public boolean getUnk6() { return unk6; }

  public void setUnk6(boolean unk6) { this.unk6 = unk6; }

  public long getUnk7() { return unk7; }

  public void setUnk7(long unk7) { this.unk7 = unk7; }

  public boolean getUnk8() { return unk8; }

  public void setUnk8(boolean unk8) { this.unk8 = unk8; }

  public boolean getUnk9() { return unk9; }

  public void setUnk9(boolean unk9) { this.unk9 = unk9; }


  public trinity_LightApplierComponentT() {
    this.filePath = null;
    this.unk1 = 0L;
    this.unk2 = 0.0f;
    this.unk3 = false;
    this.unk4 = null;
    this.unk5 = 0L;
    this.unk6 = false;
    this.unk7 = 0L;
    this.unk8 = false;
    this.unk9 = false;
  }
  public static trinity_LightApplierComponentT deserializeFromBinary(byte[] fbBuffer) {
    return trinity_LightApplierComponent.getRootAstrinity_LightApplierComponent(ByteBuffer.wrap(fbBuffer)).unpack();
  }
  public byte[] serializeToBinary() {
    FlatBufferBuilder fbb = new FlatBufferBuilder();
    trinity_LightApplierComponent.finishtrinity_LightApplierComponentBuffer(fbb, trinity_LightApplierComponent.pack(fbb, this));
    return fbb.sizedByteArray();
  }
}

