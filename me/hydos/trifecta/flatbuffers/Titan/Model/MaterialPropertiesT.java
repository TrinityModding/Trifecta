// automatically generated by the FlatBuffers compiler, do not modify

package me.hydos.trifecta.flatbuffers.Titan.Model;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

public class MaterialPropertiesT {
  private String name;
  private me.hydos.trifecta.flatbuffers.Titan.Model.MaterialMapperT[] mappers;
  private long res2;
  private long unk3;
  private me.hydos.trifecta.flatbuffers.Titan.Model.EmbeddedTRACMT tracm;
  private long[] res5;

  public String getName() { return name; }

  public void setName(String name) { this.name = name; }

  public me.hydos.trifecta.flatbuffers.Titan.Model.MaterialMapperT[] getMappers() { return mappers; }

  public void setMappers(me.hydos.trifecta.flatbuffers.Titan.Model.MaterialMapperT[] mappers) { this.mappers = mappers; }

  public long getRes2() { return res2; }

  public void setRes2(long res2) { this.res2 = res2; }

  public long getUnk3() { return unk3; }

  public void setUnk3(long unk3) { this.unk3 = unk3; }

  public me.hydos.trifecta.flatbuffers.Titan.Model.EmbeddedTRACMT getTracm() { return tracm; }

  public void setTracm(me.hydos.trifecta.flatbuffers.Titan.Model.EmbeddedTRACMT tracm) { this.tracm = tracm; }

  public long[] getRes5() { return res5; }

  public void setRes5(long[] res5) { this.res5 = res5; }


  public MaterialPropertiesT() {
    this.name = null;
    this.mappers = null;
    this.res2 = 0L;
    this.unk3 = 0L;
    this.tracm = null;
    this.res5 = null;
  }
}

