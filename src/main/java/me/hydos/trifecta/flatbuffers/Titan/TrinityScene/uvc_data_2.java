// automatically generated by the FlatBuffers compiler, do not modify

package me.hydos.trifecta.flatbuffers.Titan.TrinityScene;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class uvc_data_2 extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_23_3_3(); }
  public static uvc_data_2 getRootAsuvc_data_2(ByteBuffer _bb) { return getRootAsuvc_data_2(_bb, new uvc_data_2()); }
  public static uvc_data_2 getRootAsuvc_data_2(ByteBuffer _bb, uvc_data_2 obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public uvc_data_2 __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void startuvc_data_2(FlatBufferBuilder builder) { builder.startTable(0); }
  public static int enduvc_data_2(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public uvc_data_2 get(int j) { return get(new uvc_data_2(), j); }
    public uvc_data_2 get(uvc_data_2 obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
  public uvc_data_2T unpack() {
    uvc_data_2T _o = new uvc_data_2T();
    unpackTo(_o);
    return _o;
  }
  public void unpackTo(uvc_data_2T _o) {
  }
  public static int pack(FlatBufferBuilder builder, uvc_data_2T _o) {
    if (_o == null) return 0;
    startuvc_data_2(builder);
    return enduvc_data_2(builder);
  }
}

