// automatically generated by the FlatBuffers compiler, do not modify

package me.hydos.trifecta.flatbuffers.Titan.TrinityScene;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class trinity_AnimationComponent extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_23_3_3(); }
  public static trinity_AnimationComponent getRootAstrinity_AnimationComponent(ByteBuffer _bb) { return getRootAstrinity_AnimationComponent(_bb, new trinity_AnimationComponent()); }
  public static trinity_AnimationComponent getRootAstrinity_AnimationComponent(ByteBuffer _bb, trinity_AnimationComponent obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public trinity_AnimationComponent __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String filePath() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer filePathAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer filePathInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  public long name() { int o = __offset(6); return o != 0 ? (long)bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 0L; }
  public boolean unk2() { int o = __offset(8); return o != 0 ? 0!=bb.get(o + bb_pos) : false; }
  public float unk3() { int o = __offset(10); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }
  public long unk4() { int o = __offset(12); return o != 0 ? (long)bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 0L; }
  public float unk5() { int o = __offset(14); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }
  public long unk6() { int o = __offset(16); return o != 0 ? (long)bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 0L; }
  public float unk7() { int o = __offset(18); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }
  public long res8() { int o = __offset(20); return o != 0 ? (long)bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 0L; }
  public float unk9() { int o = __offset(22); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }
  public long unk10() { int o = __offset(24); return o != 0 ? (long)bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 0L; }
  public long res11() { int o = __offset(26); return o != 0 ? (long)bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 0L; }

  public static int createtrinity_AnimationComponent(FlatBufferBuilder builder,
      int filePathOffset,
      long name,
      boolean unk2,
      float unk3,
      long unk4,
      float unk5,
      long unk6,
      float unk7,
      long res8,
      float unk9,
      long unk10,
      long res11) {
    builder.startTable(12);
    trinity_AnimationComponent.addRes11(builder, res11);
    trinity_AnimationComponent.addUnk10(builder, unk10);
    trinity_AnimationComponent.addUnk9(builder, unk9);
    trinity_AnimationComponent.addRes8(builder, res8);
    trinity_AnimationComponent.addUnk7(builder, unk7);
    trinity_AnimationComponent.addUnk6(builder, unk6);
    trinity_AnimationComponent.addUnk5(builder, unk5);
    trinity_AnimationComponent.addUnk4(builder, unk4);
    trinity_AnimationComponent.addUnk3(builder, unk3);
    trinity_AnimationComponent.addName(builder, name);
    trinity_AnimationComponent.addFilePath(builder, filePathOffset);
    trinity_AnimationComponent.addUnk2(builder, unk2);
    return trinity_AnimationComponent.endtrinity_AnimationComponent(builder);
  }

  public static void starttrinity_AnimationComponent(FlatBufferBuilder builder) { builder.startTable(12); }
  public static void addFilePath(FlatBufferBuilder builder, int filePathOffset) { builder.addOffset(0, filePathOffset, 0); }
  public static void addName(FlatBufferBuilder builder, long name) { builder.addInt(1, (int) name, (int) 0L); }
  public static void addUnk2(FlatBufferBuilder builder, boolean unk2) { builder.addBoolean(2, unk2, false); }
  public static void addUnk3(FlatBufferBuilder builder, float unk3) { builder.addFloat(3, unk3, 0.0f); }
  public static void addUnk4(FlatBufferBuilder builder, long unk4) { builder.addInt(4, (int) unk4, (int) 0L); }
  public static void addUnk5(FlatBufferBuilder builder, float unk5) { builder.addFloat(5, unk5, 0.0f); }
  public static void addUnk6(FlatBufferBuilder builder, long unk6) { builder.addInt(6, (int) unk6, (int) 0L); }
  public static void addUnk7(FlatBufferBuilder builder, float unk7) { builder.addFloat(7, unk7, 0.0f); }
  public static void addRes8(FlatBufferBuilder builder, long res8) { builder.addInt(8, (int) res8, (int) 0L); }
  public static void addUnk9(FlatBufferBuilder builder, float unk9) { builder.addFloat(9, unk9, 0.0f); }
  public static void addUnk10(FlatBufferBuilder builder, long unk10) { builder.addInt(10, (int) unk10, (int) 0L); }
  public static void addRes11(FlatBufferBuilder builder, long res11) { builder.addInt(11, (int) res11, (int) 0L); }
  public static int endtrinity_AnimationComponent(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }
  public static void finishtrinity_AnimationComponentBuffer(FlatBufferBuilder builder, int offset) { builder.finish(offset); }
  public static void finishSizePrefixedtrinity_AnimationComponentBuffer(FlatBufferBuilder builder, int offset) { builder.finishSizePrefixed(offset); }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public trinity_AnimationComponent get(int j) { return get(new trinity_AnimationComponent(), j); }
    public trinity_AnimationComponent get(trinity_AnimationComponent obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
  public trinity_AnimationComponentT unpack() {
    trinity_AnimationComponentT _o = new trinity_AnimationComponentT();
    unpackTo(_o);
    return _o;
  }
  public void unpackTo(trinity_AnimationComponentT _o) {
    String _oFilePath = filePath();
    _o.setFilePath(_oFilePath);
    long _oName = name();
    _o.setName(_oName);
    boolean _oUnk2 = unk2();
    _o.setUnk2(_oUnk2);
    float _oUnk3 = unk3();
    _o.setUnk3(_oUnk3);
    long _oUnk4 = unk4();
    _o.setUnk4(_oUnk4);
    float _oUnk5 = unk5();
    _o.setUnk5(_oUnk5);
    long _oUnk6 = unk6();
    _o.setUnk6(_oUnk6);
    float _oUnk7 = unk7();
    _o.setUnk7(_oUnk7);
    long _oRes8 = res8();
    _o.setRes8(_oRes8);
    float _oUnk9 = unk9();
    _o.setUnk9(_oUnk9);
    long _oUnk10 = unk10();
    _o.setUnk10(_oUnk10);
    long _oRes11 = res11();
    _o.setRes11(_oRes11);
  }
  public static int pack(FlatBufferBuilder builder, trinity_AnimationComponentT _o) {
    if (_o == null) return 0;
    int _filePath = _o.getFilePath() == null ? 0 : builder.createString(_o.getFilePath());
    return createtrinity_AnimationComponent(
      builder,
      _filePath,
      _o.getName(),
      _o.getUnk2(),
      _o.getUnk3(),
      _o.getUnk4(),
      _o.getUnk5(),
      _o.getUnk6(),
      _o.getUnk7(),
      _o.getRes8(),
      _o.getUnk9(),
      _o.getUnk10(),
      _o.getRes11());
  }
}

