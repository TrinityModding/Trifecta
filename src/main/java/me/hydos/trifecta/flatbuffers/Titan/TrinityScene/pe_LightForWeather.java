// automatically generated by the FlatBuffers compiler, do not modify

package me.hydos.trifecta.flatbuffers.Titan.TrinityScene;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class pe_LightForWeather extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_23_3_3(); }
  public static pe_LightForWeather getRootAspe_LightForWeather(ByteBuffer _bb) { return getRootAspe_LightForWeather(_bb, new pe_LightForWeather()); }
  public static pe_LightForWeather getRootAspe_LightForWeather(ByteBuffer _bb, pe_LightForWeather obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public pe_LightForWeather __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String unk0() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer unk0AsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer unk0InByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  public float unk1() { int o = __offset(6); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }
  public float unk2() { int o = __offset(8); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }
  public long unk3() { int o = __offset(10); return o != 0 ? (long)bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 0L; }
  public String unk4() { int o = __offset(12); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer unk4AsByteBuffer() { return __vector_as_bytebuffer(12, 1); }
  public ByteBuffer unk4InByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 12, 1); }
  public long unk5() { int o = __offset(14); return o != 0 ? (long)bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 0L; }
  public long unk6() { int o = __offset(16); return o != 0 ? (long)bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 0L; }
  public String unk7() { int o = __offset(18); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer unk7AsByteBuffer() { return __vector_as_bytebuffer(18, 1); }
  public ByteBuffer unk7InByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 18, 1); }
  public long unk8() { int o = __offset(20); return o != 0 ? (long)bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 0L; }
  public String unk9() { int o = __offset(22); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer unk9AsByteBuffer() { return __vector_as_bytebuffer(22, 1); }
  public ByteBuffer unk9InByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 22, 1); }

  public static int createpe_LightForWeather(FlatBufferBuilder builder,
      int unk0Offset,
      float unk1,
      float unk2,
      long unk3,
      int unk4Offset,
      long unk5,
      long unk6,
      int unk7Offset,
      long unk8,
      int unk9Offset) {
    builder.startTable(10);
    pe_LightForWeather.addUnk9(builder, unk9Offset);
    pe_LightForWeather.addUnk8(builder, unk8);
    pe_LightForWeather.addUnk7(builder, unk7Offset);
    pe_LightForWeather.addUnk6(builder, unk6);
    pe_LightForWeather.addUnk5(builder, unk5);
    pe_LightForWeather.addUnk4(builder, unk4Offset);
    pe_LightForWeather.addUnk3(builder, unk3);
    pe_LightForWeather.addUnk2(builder, unk2);
    pe_LightForWeather.addUnk1(builder, unk1);
    pe_LightForWeather.addUnk0(builder, unk0Offset);
    return pe_LightForWeather.endpe_LightForWeather(builder);
  }

  public static void startpe_LightForWeather(FlatBufferBuilder builder) { builder.startTable(10); }
  public static void addUnk0(FlatBufferBuilder builder, int unk0Offset) { builder.addOffset(0, unk0Offset, 0); }
  public static void addUnk1(FlatBufferBuilder builder, float unk1) { builder.addFloat(1, unk1, 0.0f); }
  public static void addUnk2(FlatBufferBuilder builder, float unk2) { builder.addFloat(2, unk2, 0.0f); }
  public static void addUnk3(FlatBufferBuilder builder, long unk3) { builder.addInt(3, (int) unk3, (int) 0L); }
  public static void addUnk4(FlatBufferBuilder builder, int unk4Offset) { builder.addOffset(4, unk4Offset, 0); }
  public static void addUnk5(FlatBufferBuilder builder, long unk5) { builder.addInt(5, (int) unk5, (int) 0L); }
  public static void addUnk6(FlatBufferBuilder builder, long unk6) { builder.addInt(6, (int) unk6, (int) 0L); }
  public static void addUnk7(FlatBufferBuilder builder, int unk7Offset) { builder.addOffset(7, unk7Offset, 0); }
  public static void addUnk8(FlatBufferBuilder builder, long unk8) { builder.addInt(8, (int) unk8, (int) 0L); }
  public static void addUnk9(FlatBufferBuilder builder, int unk9Offset) { builder.addOffset(9, unk9Offset, 0); }
  public static int endpe_LightForWeather(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }
  public static void finishpe_LightForWeatherBuffer(FlatBufferBuilder builder, int offset) { builder.finish(offset); }
  public static void finishSizePrefixedpe_LightForWeatherBuffer(FlatBufferBuilder builder, int offset) { builder.finishSizePrefixed(offset); }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public pe_LightForWeather get(int j) { return get(new pe_LightForWeather(), j); }
    public pe_LightForWeather get(pe_LightForWeather obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
  public pe_LightForWeatherT unpack() {
    pe_LightForWeatherT _o = new pe_LightForWeatherT();
    unpackTo(_o);
    return _o;
  }
  public void unpackTo(pe_LightForWeatherT _o) {
    String _oUnk0 = unk0();
    _o.setUnk0(_oUnk0);
    float _oUnk1 = unk1();
    _o.setUnk1(_oUnk1);
    float _oUnk2 = unk2();
    _o.setUnk2(_oUnk2);
    long _oUnk3 = unk3();
    _o.setUnk3(_oUnk3);
    String _oUnk4 = unk4();
    _o.setUnk4(_oUnk4);
    long _oUnk5 = unk5();
    _o.setUnk5(_oUnk5);
    long _oUnk6 = unk6();
    _o.setUnk6(_oUnk6);
    String _oUnk7 = unk7();
    _o.setUnk7(_oUnk7);
    long _oUnk8 = unk8();
    _o.setUnk8(_oUnk8);
    String _oUnk9 = unk9();
    _o.setUnk9(_oUnk9);
  }
  public static int pack(FlatBufferBuilder builder, pe_LightForWeatherT _o) {
    if (_o == null) return 0;
    int _unk0 = _o.getUnk0() == null ? 0 : builder.createString(_o.getUnk0());
    int _unk4 = _o.getUnk4() == null ? 0 : builder.createString(_o.getUnk4());
    int _unk7 = _o.getUnk7() == null ? 0 : builder.createString(_o.getUnk7());
    int _unk9 = _o.getUnk9() == null ? 0 : builder.createString(_o.getUnk9());
    return createpe_LightForWeather(
      builder,
      _unk0,
      _o.getUnk1(),
      _o.getUnk2(),
      _o.getUnk3(),
      _unk4,
      _o.getUnk5(),
      _o.getUnk6(),
      _unk7,
      _o.getUnk8(),
      _unk9);
  }
}

