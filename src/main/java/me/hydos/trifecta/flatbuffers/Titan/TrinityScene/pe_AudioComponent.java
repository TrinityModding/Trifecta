// automatically generated by the FlatBuffers compiler, do not modify

package me.hydos.trifecta.flatbuffers.Titan.TrinityScene;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class pe_AudioComponent extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_23_3_3(); }
  public static pe_AudioComponent getRootAspe_AudioComponent(ByteBuffer _bb) { return getRootAspe_AudioComponent(_bb, new pe_AudioComponent()); }
  public static pe_AudioComponent getRootAspe_AudioComponent(ByteBuffer _bb, pe_AudioComponent obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public pe_AudioComponent __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long unk0() { int o = __offset(4); return o != 0 ? (long)bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 0L; }
  public long unk1() { int o = __offset(6); return o != 0 ? (long)bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 0L; }
  public boolean unk2() { int o = __offset(8); return o != 0 ? 0!=bb.get(o + bb_pos) : true; }
  public long unk3() { int o = __offset(10); return o != 0 ? (long)bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 0L; }
  public float unk4() { int o = __offset(12); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }

  public static int createpe_AudioComponent(FlatBufferBuilder builder,
      long unk0,
      long unk1,
      boolean unk2,
      long unk3,
      float unk4) {
    builder.startTable(5);
    pe_AudioComponent.addUnk4(builder, unk4);
    pe_AudioComponent.addUnk3(builder, unk3);
    pe_AudioComponent.addUnk1(builder, unk1);
    pe_AudioComponent.addUnk0(builder, unk0);
    pe_AudioComponent.addUnk2(builder, unk2);
    return pe_AudioComponent.endpe_AudioComponent(builder);
  }

  public static void startpe_AudioComponent(FlatBufferBuilder builder) { builder.startTable(5); }
  public static void addUnk0(FlatBufferBuilder builder, long unk0) { builder.addInt(0, (int) unk0, (int) 0L); }
  public static void addUnk1(FlatBufferBuilder builder, long unk1) { builder.addInt(1, (int) unk1, (int) 0L); }
  public static void addUnk2(FlatBufferBuilder builder, boolean unk2) { builder.addBoolean(2, unk2, true); }
  public static void addUnk3(FlatBufferBuilder builder, long unk3) { builder.addInt(3, (int) unk3, (int) 0L); }
  public static void addUnk4(FlatBufferBuilder builder, float unk4) { builder.addFloat(4, unk4, 0.0f); }
  public static int endpe_AudioComponent(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }
  public static void finishpe_AudioComponentBuffer(FlatBufferBuilder builder, int offset) { builder.finish(offset); }
  public static void finishSizePrefixedpe_AudioComponentBuffer(FlatBufferBuilder builder, int offset) { builder.finishSizePrefixed(offset); }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public pe_AudioComponent get(int j) { return get(new pe_AudioComponent(), j); }
    public pe_AudioComponent get(pe_AudioComponent obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
  public pe_AudioComponentT unpack() {
    pe_AudioComponentT _o = new pe_AudioComponentT();
    unpackTo(_o);
    return _o;
  }
  public void unpackTo(pe_AudioComponentT _o) {
    long _oUnk0 = unk0();
    _o.setUnk0(_oUnk0);
    long _oUnk1 = unk1();
    _o.setUnk1(_oUnk1);
    boolean _oUnk2 = unk2();
    _o.setUnk2(_oUnk2);
    long _oUnk3 = unk3();
    _o.setUnk3(_oUnk3);
    float _oUnk4 = unk4();
    _o.setUnk4(_oUnk4);
  }
  public static int pack(FlatBufferBuilder builder, pe_AudioComponentT _o) {
    if (_o == null) return 0;
    return createpe_AudioComponent(
      builder,
      _o.getUnk0(),
      _o.getUnk1(),
      _o.getUnk2(),
      _o.getUnk3(),
      _o.getUnk4());
  }
}

