// automatically generated by the FlatBuffers compiler, do not modify

package me.hydos.trifecta.flatbuffers.Titan.TrinityScene;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

public class ti_FieldAttributePickerComponentT {
  private float unk0;
  private boolean unk1;
  private float unk2;
  private float unk3;

  public float getUnk0() { return unk0; }

  public void setUnk0(float unk0) { this.unk0 = unk0; }

  public boolean getUnk1() { return unk1; }

  public void setUnk1(boolean unk1) { this.unk1 = unk1; }

  public float getUnk2() { return unk2; }

  public void setUnk2(float unk2) { this.unk2 = unk2; }

  public float getUnk3() { return unk3; }

  public void setUnk3(float unk3) { this.unk3 = unk3; }


  public ti_FieldAttributePickerComponentT() {
    this.unk0 = 0.0f;
    this.unk1 = true;
    this.unk2 = 0.0f;
    this.unk3 = 0.0f;
  }
  public static ti_FieldAttributePickerComponentT deserializeFromBinary(byte[] fbBuffer) {
    return ti_FieldAttributePickerComponent.getRootAsti_FieldAttributePickerComponent(ByteBuffer.wrap(fbBuffer)).unpack();
  }
  public byte[] serializeToBinary() {
    FlatBufferBuilder fbb = new FlatBufferBuilder();
    ti_FieldAttributePickerComponent.finishti_FieldAttributePickerComponentBuffer(fbb, ti_FieldAttributePickerComponent.pack(fbb, this));
    return fbb.sizedByteArray();
  }
}

