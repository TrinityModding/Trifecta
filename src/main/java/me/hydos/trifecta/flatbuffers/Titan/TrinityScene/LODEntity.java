// automatically generated by the FlatBuffers compiler, do not modify

package me.hydos.trifecta.flatbuffers.Titan.TrinityScene;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class LODEntity extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_23_3_3(); }
  public static LODEntity getRootAsLODEntity(ByteBuffer _bb) { return getRootAsLODEntity(_bb, new LODEntity()); }
  public static LODEntity getRootAsLODEntity(ByteBuffer _bb, LODEntity obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public LODEntity __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String trmdlFilePath() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer trmdlFilePathAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer trmdlFilePathInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  public String tracnFilePath() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer tracnFilePathAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public ByteBuffer tracnFilePathInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 6, 1); }
  public String hash() { int o = __offset(8); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer hashAsByteBuffer() { return __vector_as_bytebuffer(8, 1); }
  public ByteBuffer hashInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 8, 1); }

  public static int createLODEntity(FlatBufferBuilder builder,
      int trmdlFilePathOffset,
      int tracnFilePathOffset,
      int hashOffset) {
    builder.startTable(3);
    LODEntity.addHash(builder, hashOffset);
    LODEntity.addTracnFilePath(builder, tracnFilePathOffset);
    LODEntity.addTrmdlFilePath(builder, trmdlFilePathOffset);
    return LODEntity.endLODEntity(builder);
  }

  public static void startLODEntity(FlatBufferBuilder builder) { builder.startTable(3); }
  public static void addTrmdlFilePath(FlatBufferBuilder builder, int trmdlFilePathOffset) { builder.addOffset(0, trmdlFilePathOffset, 0); }
  public static void addTracnFilePath(FlatBufferBuilder builder, int tracnFilePathOffset) { builder.addOffset(1, tracnFilePathOffset, 0); }
  public static void addHash(FlatBufferBuilder builder, int hashOffset) { builder.addOffset(2, hashOffset, 0); }
  public static int endLODEntity(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public LODEntity get(int j) { return get(new LODEntity(), j); }
    public LODEntity get(LODEntity obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
  public LODEntityT unpack() {
    LODEntityT _o = new LODEntityT();
    unpackTo(_o);
    return _o;
  }
  public void unpackTo(LODEntityT _o) {
    String _oTrmdlFilePath = trmdlFilePath();
    _o.setTrmdlFilePath(_oTrmdlFilePath);
    String _oTracnFilePath = tracnFilePath();
    _o.setTracnFilePath(_oTracnFilePath);
    String _oHash = hash();
    _o.setHash(_oHash);
  }
  public static int pack(FlatBufferBuilder builder, LODEntityT _o) {
    if (_o == null) return 0;
    int _trmdlFilePath = _o.getTrmdlFilePath() == null ? 0 : builder.createString(_o.getTrmdlFilePath());
    int _tracnFilePath = _o.getTracnFilePath() == null ? 0 : builder.createString(_o.getTracnFilePath());
    int _hash = _o.getHash() == null ? 0 : builder.createString(_o.getHash());
    return createLODEntity(
      builder,
      _trmdlFilePath,
      _tracnFilePath,
      _hash);
  }
}

