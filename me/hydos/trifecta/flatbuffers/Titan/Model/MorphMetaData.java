// automatically generated by the FlatBuffers compiler, do not modify

package me.hydos.trifecta.flatbuffers.Titan.Model;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class MorphMetaData extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_23_3_3(); }
  public static MorphMetaData getRootAsMorphMetaData(ByteBuffer _bb) { return getRootAsMorphMetaData(_bb, new MorphMetaData()); }
  public static MorphMetaData getRootAsMorphMetaData(ByteBuffer _bb, MorphMetaData obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public MorphMetaData __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long morphIndex() { int o = __offset(4); return o != 0 ? (long)bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 0L; }
  public String morphName() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer morphNameAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public ByteBuffer morphNameInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 6, 1); }
  public int morphType() { int o = __offset(8); return o != 0 ? bb.get(o + bb_pos) & 0xFF : 0; }

  public static int createMorphMetaData(FlatBufferBuilder builder,
      long morphIndex,
      int morphNameOffset,
      int morphType) {
    builder.startTable(3);
    MorphMetaData.addMorphName(builder, morphNameOffset);
    MorphMetaData.addMorphIndex(builder, morphIndex);
    MorphMetaData.addMorphType(builder, morphType);
    return MorphMetaData.endMorphMetaData(builder);
  }

  public static void startMorphMetaData(FlatBufferBuilder builder) { builder.startTable(3); }
  public static void addMorphIndex(FlatBufferBuilder builder, long morphIndex) { builder.addInt(0, (int) morphIndex, (int) 0L); }
  public static void addMorphName(FlatBufferBuilder builder, int morphNameOffset) { builder.addOffset(1, morphNameOffset, 0); }
  public static void addMorphType(FlatBufferBuilder builder, int morphType) { builder.addByte(2, (byte) morphType, (byte) 0); }
  public static int endMorphMetaData(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public MorphMetaData get(int j) { return get(new MorphMetaData(), j); }
    public MorphMetaData get(MorphMetaData obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
  public MorphMetaDataT unpack() {
    MorphMetaDataT _o = new MorphMetaDataT();
    unpackTo(_o);
    return _o;
  }
  public void unpackTo(MorphMetaDataT _o) {
    long _oMorphIndex = morphIndex();
    _o.setMorphIndex(_oMorphIndex);
    String _oMorphName = morphName();
    _o.setMorphName(_oMorphName);
    int _oMorphType = morphType();
    _o.setMorphType(_oMorphType);
  }
  public static int pack(FlatBufferBuilder builder, MorphMetaDataT _o) {
    if (_o == null) return 0;
    int _morphName = _o.getMorphName() == null ? 0 : builder.createString(_o.getMorphName());
    return createMorphMetaData(
      builder,
      _o.getMorphIndex(),
      _morphName,
      _o.getMorphType());
  }
}

