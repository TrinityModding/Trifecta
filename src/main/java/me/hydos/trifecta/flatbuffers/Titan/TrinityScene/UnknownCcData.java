// automatically generated by the FlatBuffers compiler, do not modify

package me.hydos.trifecta.flatbuffers.Titan.TrinityScene;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class UnknownCcData extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_23_3_3(); }
  public static UnknownCcData getRootAsUnknownCcData(ByteBuffer _bb) { return getRootAsUnknownCcData(_bb, new UnknownCcData()); }
  public static UnknownCcData getRootAsUnknownCcData(ByteBuffer _bb, UnknownCcData obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public UnknownCcData __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String unk0() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer unk0AsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer unk0InByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  public boolean unk1() { int o = __offset(6); return o != 0 ? 0!=bb.get(o + bb_pos) : false; }

  public static int createUnknownCcData(FlatBufferBuilder builder,
      int unk0Offset,
      boolean unk1) {
    builder.startTable(2);
    UnknownCcData.addUnk0(builder, unk0Offset);
    UnknownCcData.addUnk1(builder, unk1);
    return UnknownCcData.endUnknownCcData(builder);
  }

  public static void startUnknownCcData(FlatBufferBuilder builder) { builder.startTable(2); }
  public static void addUnk0(FlatBufferBuilder builder, int unk0Offset) { builder.addOffset(0, unk0Offset, 0); }
  public static void addUnk1(FlatBufferBuilder builder, boolean unk1) { builder.addBoolean(1, unk1, false); }
  public static int endUnknownCcData(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public UnknownCcData get(int j) { return get(new UnknownCcData(), j); }
    public UnknownCcData get(UnknownCcData obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
  public UnknownCcDataT unpack() {
    UnknownCcDataT _o = new UnknownCcDataT();
    unpackTo(_o);
    return _o;
  }
  public void unpackTo(UnknownCcDataT _o) {
    String _oUnk0 = unk0();
    _o.setUnk0(_oUnk0);
    boolean _oUnk1 = unk1();
    _o.setUnk1(_oUnk1);
  }
  public static int pack(FlatBufferBuilder builder, UnknownCcDataT _o) {
    if (_o == null) return 0;
    int _unk0 = _o.getUnk0() == null ? 0 : builder.createString(_o.getUnk0());
    return createUnknownCcData(
      builder,
      _unk0,
      _o.getUnk1());
  }
}

