// automatically generated by the FlatBuffers compiler, do not modify

package me.hydos.trifecta.flatbuffers.Titan.TrinityScene;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

public class pe_TextComponentT {
  private String filepath;

  public String getFilepath() { return filepath; }

  public void setFilepath(String filepath) { this.filepath = filepath; }


  public pe_TextComponentT() {
    this.filepath = null;
  }
  public static pe_TextComponentT deserializeFromBinary(byte[] fbBuffer) {
    return pe_TextComponent.getRootAspe_TextComponent(ByteBuffer.wrap(fbBuffer)).unpack();
  }
  public byte[] serializeToBinary() {
    FlatBufferBuilder fbb = new FlatBufferBuilder();
    pe_TextComponent.finishpe_TextComponentBuffer(fbb, pe_TextComponent.pack(fbb, this));
    return fbb.sizedByteArray();
  }
}

