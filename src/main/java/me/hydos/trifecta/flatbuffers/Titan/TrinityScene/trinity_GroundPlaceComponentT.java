// automatically generated by the FlatBuffers compiler, do not modify

package me.hydos.trifecta.flatbuffers.Titan.TrinityScene;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

public class trinity_GroundPlaceComponentT {
  private long index;
  private boolean res1;

  public long getIndex() { return index; }

  public void setIndex(long index) { this.index = index; }

  public boolean getRes1() { return res1; }

  public void setRes1(boolean res1) { this.res1 = res1; }


  public trinity_GroundPlaceComponentT() {
    this.index = 0L;
    this.res1 = true;
  }
  public static trinity_GroundPlaceComponentT deserializeFromBinary(byte[] fbBuffer) {
    return trinity_GroundPlaceComponent.getRootAstrinity_GroundPlaceComponent(ByteBuffer.wrap(fbBuffer)).unpack();
  }
  public byte[] serializeToBinary() {
    FlatBufferBuilder fbb = new FlatBufferBuilder();
    trinity_GroundPlaceComponent.finishtrinity_GroundPlaceComponentBuffer(fbb, trinity_GroundPlaceComponent.pack(fbb, this));
    return fbb.sizedByteArray();
  }
}

