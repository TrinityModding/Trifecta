// automatically generated by the FlatBuffers compiler, do not modify

package me.hydos.trifecta.flatbuffers.Titan.TrinityScene;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

public class trinity_GrassCollisionComponentT {
  private String name;
  private float min;
  private float max;

  public String getName() { return name; }

  public void setName(String name) { this.name = name; }

  public float getMin() { return min; }

  public void setMin(float min) { this.min = min; }

  public float getMax() { return max; }

  public void setMax(float max) { this.max = max; }


  public trinity_GrassCollisionComponentT() {
    this.name = null;
    this.min = 0.0f;
    this.max = 0.0f;
  }
  public static trinity_GrassCollisionComponentT deserializeFromBinary(byte[] fbBuffer) {
    return trinity_GrassCollisionComponent.getRootAstrinity_GrassCollisionComponent(ByteBuffer.wrap(fbBuffer)).unpack();
  }
  public byte[] serializeToBinary() {
    FlatBufferBuilder fbb = new FlatBufferBuilder();
    trinity_GrassCollisionComponent.finishtrinity_GrassCollisionComponentBuffer(fbb, trinity_GrassCollisionComponent.pack(fbb, this));
    return fbb.sizedByteArray();
  }
}

