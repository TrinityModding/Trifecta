// automatically generated by the FlatBuffers compiler, do not modify

package me.hydos.trifecta.flatbuffers.Titan.Model;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class Float4Parameter extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_23_3_3(); }
  public static Float4Parameter getRootAsFloat4Parameter(ByteBuffer _bb) { return getRootAsFloat4Parameter(_bb, new Float4Parameter()); }
  public static Float4Parameter getRootAsFloat4Parameter(ByteBuffer _bb, Float4Parameter obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public Float4Parameter __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String colorName() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer colorNameAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer colorNameInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  public me.hydos.trifecta.flatbuffers.Titan.Model.RGBA colorValue() { return colorValue(new me.hydos.trifecta.flatbuffers.Titan.Model.RGBA()); }
  public me.hydos.trifecta.flatbuffers.Titan.Model.RGBA colorValue(me.hydos.trifecta.flatbuffers.Titan.Model.RGBA obj) { int o = __offset(6); return o != 0 ? obj.__assign(o + bb_pos, bb) : null; }

  public static void startFloat4Parameter(FlatBufferBuilder builder) { builder.startTable(2); }
  public static void addColorName(FlatBufferBuilder builder, int colorNameOffset) { builder.addOffset(0, colorNameOffset, 0); }
  public static void addColorValue(FlatBufferBuilder builder, int colorValueOffset) { builder.addStruct(1, colorValueOffset, 0); }
  public static int endFloat4Parameter(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public Float4Parameter get(int j) { return get(new Float4Parameter(), j); }
    public Float4Parameter get(Float4Parameter obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
  public Float4ParameterT unpack() {
    Float4ParameterT _o = new Float4ParameterT();
    unpackTo(_o);
    return _o;
  }
  public void unpackTo(Float4ParameterT _o) {
    String _oColorName = colorName();
    _o.setColorName(_oColorName);
    if (colorValue() != null) colorValue().unpackTo(_o.getColorValue());
    else _o.setColorValue(null);
  }
  public static int pack(FlatBufferBuilder builder, Float4ParameterT _o) {
    if (_o == null) return 0;
    int _colorName = _o.getColorName() == null ? 0 : builder.createString(_o.getColorName());
    startFloat4Parameter(builder);
    addColorName(builder, _colorName);
    addColorValue(builder, me.hydos.trifecta.flatbuffers.Titan.Model.RGBA.pack(builder, _o.getColorValue()));
    return endFloat4Parameter(builder);
  }
}

